// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // You can change to mysql, sqlite, etc. as needed
  url      = env("DATABASE_URL")
}

model Contract {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Package Information
  namaPaket    String? @default("")
  namaPenyedia String? @default("")

  // Location details
  kota           String? @default("")
  distrik        String? @default("")
  kampung        String? @default("")
  koordinatAwal  String? @default("")
  koordinatAkhir String? @default("")

  // Officials
  ppk                 String? @default("")
  nipPPK              String? @default("")
  korwaslap           String? @default("")
  nipKorwaslap        String? @default("")
  pengawasLapangan    String? @default("")
  nipPengawasLapangan String? @default("")

  // Financial details
  paguAnggaran String? @default("")
  nilaiKontrak Float?  @default(0.0)
  sumberDana   String? @default("")

  // Contract details
  nomorKontrak    String?   @unique
  tanggalKontrak  DateTime?
  masaPelaksanaan Int?      @default(0)
  volumeKontrak   String?   @default("")
  satuanKontrak   String?   @default("")

  // Supervision details
  konsultanSupervisi       String?   @default("")
  nomorKontrakSupervisi    String?   @default("")
  nilaiKontrakSupervisi    Float?    @default(0.0)
  tanggalKontrakSupervisi  DateTime?
  masaPelaksanaanSupervisi Int?      @default(0)

  // Addendum handling
  hasAddendum String?    @default("tidak ada") // Default ke "tidak ada"
  addendum    Addendum[]

  // Project status and completion
  pemberianKesempatan Boolean? @default(false)
  hasilProdukAkhir    String?  @default("")
  dimensi             String?  @default("")
  kendala             Boolean? @default(false)
  permasalahan        String?
  keterangan          String?

  // Payment terms (percentages)
  uangMuka Float? @default(0.0)
  termin1  Float? @default(0.0)
  termin2  Float? @default(0.0)
  termin3  Float? @default(0.0)
  termin4  Float? @default(0.0)

  // Documentation
  dokumentasiAwal   String?
  dokumentasiTengah String?
  dokumentasiAkhir  String?

  // Timestamps for tracking progression  
  startDate DateTime?
  endDate   DateTime?

  contractAccess ContractAccess[]
  progress       Progress[]

  @@map("contracts")
}

model Addendum {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name                String?
  tipe                String?
  hari                String?
  volume              String?
  satuan              String?
  pemberianKesempatan Boolean

  contract   Contract @relation(fields: [contractId], references: [id], onDelete: Cascade)
  contractId String

  @@map("addendums")
}

model Progress {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  contract   Contract @relation(fields: [contractId], references: [id], onDelete: Cascade)
  contractId String

  month     String
  week      Int
  rencana   Float
  realisasi Float
  deviasi   Float

  @@unique([contractId, month, week])
  @@map("progress")
}

model ContractAccess {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  contract   Contract @relation(fields: [contractId], references: [id], onDelete: Cascade)
  contractId String

  @@unique([userId, contractId])
  @@map("contract_access")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name     String
  email    String @unique
  password String
  role     Role   @default(SUPERADMIN)

  contractAccess ContractAccess[]

  @@map("users")
}

enum Role {
  ADMIN
  SUPERADMIN
  CONSULTANT
}
